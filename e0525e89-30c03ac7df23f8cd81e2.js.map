{"version":3,"file":"e0525e89-30c03ac7df23f8cd81e2.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { GatsbyImage, getSrc, getImage } from 'gatsby-plugin-image';\r\nimport { kebabCase } from 'lodash-es';\r\nimport { lighten, setLightness } from 'polished';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\r\nimport PostContent from '../components/PostContent';\r\nimport { ReadNext } from '../components/ReadNext';\r\nimport { Subscribe } from '../components/subscribe/Subscribe';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport { colors } from '../styles/colors';\r\nimport { inner, outer, SiteMain } from '../styles/shared';\r\nimport config from '../website-config';\r\nimport { AuthorList } from '../components/AuthorList';\r\n\r\nexport type Author = {\r\n  name: string;\r\n  bio: string;\r\n  avatar: any;\r\n};\r\n\r\ntype PageTemplateProps = {\r\n  location: Location;\r\n  data: {\r\n    markdownRemark: {\r\n      html: string;\r\n      htmlAst: any;\r\n      excerpt: string;\r\n      frontmatter: {\r\n        title: string;\r\n        date: string;\r\n        userDate: string;\r\n        image: any;\r\n        excerpt: string;\r\n        description: string;\r\n        tags: string[];\r\n        author: Author[];\r\n      };\r\n      fields: {\r\n        readingTime: {\r\n          text: string;\r\n        };\r\n      };\r\n    };\r\n    relatedPosts: {\r\n      totalCount: number;\r\n      edges: Array<{\r\n        node: {\r\n          timeToRead: number;\r\n          frontmatter: {\r\n            title: string;\r\n            date: string;\r\n          };\r\n          fields: {\r\n            slug: string;\r\n          };\r\n        };\r\n      }>;\r\n    };\r\n  };\r\n  pageContext: {\r\n    prev: PageContext;\r\n    next: PageContext;\r\n  };\r\n};\r\n\r\nexport type PageContext = {\r\n  excerpt: string;\r\n  fields: {\r\n    slug: string;\r\n    readingTime: {\r\n      text: string;\r\n    };\r\n  };\r\n  frontmatter: {\r\n    image: any;\r\n    excerpt: string;\r\n    description: string;\r\n    title: string;\r\n    date: string;\r\n    draft?: boolean;\r\n    tags: string[];\r\n    author: Author[];\r\n  };\r\n};\r\n\r\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\r\n  const post = data.markdownRemark;\r\n  const date = new Date(post.frontmatter.date);\r\n  // 2018-08-20\r\n  const datetime = format(date, 'yyyy-MM-dd');\r\n  // 20 AUG 2018\r\n  const displayDatetime = format(date, 'dd LLL yyyy');\r\n\r\n  return (\r\n    <IndexLayout className=\"post-template\">\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>{post.frontmatter.title}</title>\r\n\r\n        <meta name=\"description\" content={post.frontmatter.description || post.excerpt} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"og:title\" content={post.frontmatter.title} />\r\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\r\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\r\n        {post.frontmatter.image && (\r\n          <meta\r\n            property=\"og:image\"\r\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\r\n          />\r\n        )}\r\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\r\n        {post.frontmatter.tags && (\r\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\r\n        )}\r\n\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\r\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\r\n        {post.frontmatter.image && (\r\n          <meta\r\n            name=\"twitter:image\"\r\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\r\n          />\r\n        )}\r\n\r\n      </Helmet>\r\n      <Wrapper css={PostTemplate}>\r\n        <header className=\"site-header\">\r\n          <div css={[outer, SiteNavMain]}>\r\n            <div css={inner}>\r\n              <SiteNav isPost post={post.frontmatter} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            {/* TODO: no-image css tag? */}\r\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\r\n              <PostFullHeader className=\"post-full-header\">\r\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\r\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\r\n                  {post.frontmatter.excerpt}\r\n                </PostFullCustomExcerpt>\r\n                <PostFullByline className=\"post-full-byline\">\r\n                  <section className=\"post-full-byline-content\">\r\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\r\n                    <section className=\"post-full-byline-meta\">\r\n                      <h4 className=\"author-name\">\r\n                        {post.frontmatter?.author?.map(author => (\r\n                          <Link key={author.name} to={`/author/${kebabCase(author.name)}/`}>\r\n                            {author.name}\r\n                          </Link>\r\n                        ))}\r\n                      </h4>\r\n                      <div className=\"byline-meta-content\">\r\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\r\n                          {displayDatetime}\r\n                        </time>\r\n                        <span className=\"byline-reading-time\">\r\n                          <span className=\"bull\">&bull;</span>\r\n                          {post.fields.readingTime.text}\r\n                        </span>\r\n                      </div>\r\n                    </section>\r\n                  </section>\r\n                </PostFullByline>\r\n              </PostFullHeader>\r\n\r\n              {post.frontmatter.image && (\r\n                <PostFullImage>\r\n                  <GatsbyImage\r\n                    image={getImage(post.frontmatter.image)!}\r\n                    style={{ height: '100%' }}\r\n                    alt={post.frontmatter.title}\r\n                  />\r\n                </PostFullImage>\r\n              )}\r\n              <PostContent htmlAst={post.htmlAst} />\r\n\r\n              <PostFullTags className=\"post-full-tags\">\r\n                {post.frontmatter.tags &&\r\n                post.frontmatter.tags.length > 0 &&\r\n                config.showAllTags ?\r\n                  post.frontmatter.tags.map((tag, idx) => (\r\n                    <React.Fragment key={tag}>\r\n                      {idx > 0 && <>, &nbsp;</>}\r\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\r\n                    </React.Fragment>\r\n                  )) :\r\n                  (\r\n                    <Link to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}>\r\n                      {post.frontmatter.tags[0]}\r\n                    </Link>\r\n                  )}\r\n              </PostFullTags>\r\n              {/* The big email subscribe modal content */}\r\n              {config.showSubscribe && <Subscribe title={config.title} />}\r\n            </article>\r\n          </div>\r\n        </main>\r\n\r\n        <ReadNext\r\n          currentPageSlug={location.pathname}\r\n          tags={post.frontmatter.tags}\r\n          relatedPosts={data.relatedPosts}\r\n          pageContext={pageContext}\r\n        />\r\n\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n}\r\n\r\nconst PostTemplate = css`\r\n  .site-main {\r\n    margin-top: 64px;\r\n    background: #fff;\r\n    padding-bottom: 4vw;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    .site-main {\r\n      /* background: var(--darkmode); */\r\n      background: ${colors.darkmode};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostFull = css`\r\n  position: relative;\r\n  z-index: 50;\r\n`;\r\n\r\nexport const NoImage = css`\r\n  .post-full-content {\r\n    padding-top: 0;\r\n  }\r\n\r\n  .post-full-content:before,\r\n  .post-full-content:after {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const PostFullHeader = styled.header`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  padding: 70px 170px 50px;\r\n  border-top-left-radius: 3px;\r\n  border-top-right-radius: 3px;\r\n\r\n  @media (max-width: 1170px) {\r\n    padding: 60px 11vw 50px;\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    padding-right: 5vw;\r\n    padding-left: 5vw;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 20px 0 35px;\r\n  }\r\n`;\r\n\r\nconst PostFullTags = styled.section`\r\n  //display: flex;\r\n  //justify-content: flex-start;\r\n  align-items: center;\r\n  /* color: var(--midgrey); */\r\n  color: ${colors.midgrey};\r\n  font-size: 1.3rem;\r\n  line-height: 1.4em;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst PostFullCustomExcerpt = styled.p`\r\n  margin: 20px 0 0;\r\n  //color: var(--midgrey);\r\n  font-family: Georgia, serif;\r\n  font-size: 2.3rem;\r\n  line-height: 1.4em;\r\n  font-weight: 300;\r\n\r\n  @media (max-width: 500px) {\r\n    font-size: 1.9rem;\r\n    line-height: 1.5em;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* color: color(var(--midgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.midgrey)};\r\n  }\r\n`;\r\n\r\nconst PostFullByline = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 35px 0 0;\r\n  padding-top: 15px;\r\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\r\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\r\n\r\n  .post-full-byline-content {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .post-full-byline-content .author-list {\r\n    justify-content: flex-start;\r\n    padding: 0 12px 0 0;\r\n  }\r\n\r\n  .post-full-byline-meta {\r\n    margin: 2px 0 0;\r\n    /* color: color(var(--midgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.midgrey)};\r\n    font-size: 1.2rem;\r\n    line-height: 1.2em;\r\n    letter-spacing: 0.2px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .post-full-byline-meta h4 {\r\n    margin: 0 0 3px;\r\n    font-size: 1.3rem;\r\n    line-height: 1.4em;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .post-full-byline-meta h4 a {\r\n    /* color: color(var(--darkgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.darkgrey)};\r\n  }\r\n\r\n  .post-full-byline-meta h4 a:hover {\r\n    /* color: var(--darkgrey); */\r\n    color: ${colors.darkgrey};\r\n  }\r\n\r\n  .post-full-byline-meta .bull {\r\n    display: inline-block;\r\n    margin: 0 4px;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\r\n    border-top-color: ${lighten('0.15', colors.darkmode)};\r\n\r\n    .post-full-byline-meta h4 a {\r\n      color: rgba(255, 255, 255, 0.75);\r\n    }\r\n\r\n    .post-full-byline-meta h4 a:hover {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostFullTitle = styled.h1`\r\n  margin: 0 0 0.2em;\r\n  color: ${setLightness('0.05', colors.darkgrey)};\r\n  font-size: 5rem;\r\n  @media (max-width: 500px) {\r\n    margin-top: 0.2em;\r\n    font-size: 3.3rem;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n`;\r\n\r\nconst PostFullImage = styled.figure`\r\n  margin: 25px 0 50px;\r\n  height: 600px;\r\n  background: ${colors.lightgrey} center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: 1170px) {\r\n    margin: 25px -6vw 50px;\r\n    border-radius: 0;\r\n    img {\r\n      max-width: 1170px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    height: 400px;\r\n  }\r\n  @media (max-width: 500px) {\r\n    margin-bottom: 4vw;\r\n    height: 350px;\r\n  }\r\n`;\r\n\r\nexport const query = graphql`\r\n  query ($slug: String, $primaryTag: String) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      htmlAst\r\n      excerpt\r\n      fields {\r\n        readingTime {\r\n          text\r\n        }\r\n      }\r\n      frontmatter {\r\n        title\r\n        userDate: date(formatString: \"D MMMM YYYY\")\r\n        date\r\n        tags\r\n        excerpt\r\n        image {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\r\n          }\r\n        }\r\n        author {\r\n          name\r\n          bio\r\n          avatar {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    relatedPosts: allMarkdownRemark(\r\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\r\n      limit: 5\r\n      sort: { frontmatter: { date: ASC } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PageTemplate;\r\n"],"names":["PostTemplate","css","colors","darkmode","PostFull","name","styles","NoImage","PostFullHeader","_styled","target","PostFullTags","midgrey","PostFullCustomExcerpt","lighten","PostFullByline","lightgrey","darkgrey","PostFullTitle","setLightness","PostFullImage","_ref","_post$frontmatter","_post$frontmatter$aut","data","pageContext","location","post","markdownRemark","date","Date","frontmatter","datetime","format","displayDatetime","___EmotionJSX","IndexLayout","className","Helmet","lang","config","title","content","description","excerpt","property","siteUrl","pathname","image","getSrc","tags","facebook","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","id","SiteMain","AuthorList","authors","author","tooltip","map","Link","key","to","_kebabCase","dateTime","fields","readingTime","text","GatsbyImage","getImage","style","height","alt","PostContent","htmlAst","length","showAllTags","tag","idx","React","showSubscribe","Subscribe","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}