{"version":3,"file":"component---src-pages-404-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAuC;AAMY;AACD;AACF;AACX;AACK;AACyC;AAAA;AAcnF,MAAMa,YAA6C,GAAGC,KAAK,IAAI;EAC7D,MAAM;IAAEC;EAAM,CAAC,GAAGD,KAAK,CAACE,IAAI,CAACC,iBAAiB;EAE9C,OACEL,6DAAA,CAACR,yDAAW,QACVQ,6DAAA,CAACT,iEAAO,QACNS,6DAAA;IAAQM,GAAG,GAAGT,gEAAU,EAAEF,2DAAK,EAAAY,KAAA,WAAAA,KAAA;EAAE,GAC/BP,6DAAA;IAAKM,GAAG,GAAGX,2DAAK,EAAEG,iEAAW,EAAAS,KAAA,WAAAA,KAAA;EAAE,GAC7BP,6DAAA;IAAKM,GAAG,EAAEZ,2DAAKA;EAAC,GACdM,6DAAA,CAACX,2EAAO;IAACqB,MAAM,EAAE;EAAM,CAAE,CACtB,CACF,CACC,CAAC,EACTV,6DAAA;IAAMW,EAAE,EAAC,WAAW;IAACL,GAAG,GAAGX,2DAAK,EAAEiB,YAAY,EAAAL,KAAA,WAAAA,KAAA,UAAE;IAACM,SAAS,EAAC;EAAe,GACxEb,6DAAA;IAAKM,GAAG,GAAGZ,2DAAK,EAAAa,KAAA,WAAAA,KAAA;EAAE,GAChBP,6DAAA;IAASc,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS;EAAE,GACtCf,6DAAA,CAACgB,SAAS,QAAC,KAAc,CAAC,EAC1BhB,6DAAA,CAACiB,gBAAgB,QAAC,gBAAgC,CAAC,EACnDjB,6DAAA,CAACZ,wCAAI;IAACkB,GAAG,EAAEY,SAAU;IAACC,EAAE,EAAC;EAAE,GAAC,6BAEtB,CACC,CAAC,EAEVnB,6DAAA;IAAKM,GAAG,EAAEV,8DAAS;IAACiB,SAAS,EAAC;EAAW,GACtCV,KAAK,CAACiB,GAAG,CAAC,CAAC;IAAEC;EAAK,CAAC,KAClBrB,6DAAA,CAACV,oEAAQ;IAACgC,GAAG,EAAED,IAAI,CAACE,MAAM,CAACC,IAAK;IAACC,IAAI,EAAEJ;EAAK,CAAE,CAC/C,CACE,CACF,CACD,CACC,CACE,CAAC;AAElB,CAAC;AAEM,MAAMK,SAAS,eA0CrB;AAED,MAAMd,YAAY,GAAAL,KAAA;EAAAoB,IAAA;EAAAC,MAAA;AAAA,KAkBjB;AAED,MAAMZ,SAAS,gBAAAe,yEAAA,OAAAxB,KAAA;EAAAyB,MAAA;AAAA,0BAGJvC,2DAAM,CAACyC,SAAS,sHAAA3B,KAAA,WAS1B;AAED,MAAMU,gBAAgB,gBAAAc,yEAAA,MAAAxB,KAAA;EAAAyB,MAAA;AAAA,0BAGXvC,2DAAM,CAAC0C,OAAO,uHAAA5B,KAAA,WASxB;AAED,MAAMW,SAAS,GAAAX,KAAA;EAAAoB,IAAA;EAAAC,MAAA;AAAA,KAGd;AAED,iEAAe3B,YAAY","sources":["webpack://gatsby-casper/./src/pages/404.tsx"],"sourcesContent":["import { graphql, Link } from 'gatsby';\r\nimport React from 'react';\r\n\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport { PostCard } from '../components/PostCard';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport { colors } from '../styles/colors';\r\nimport { inner, outer, PostFeed, SiteHeader, SiteNavMain } from '../styles/shared';\r\nimport { PageContext } from '../templates/post';\r\n\r\ninterface NotFoundTemplateProps {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      totalCount: number;\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n}\r\n\r\nconst NotFoundPage: React.FC<NotFoundTemplateProps> = props => {\r\n  const { edges } = props.data.allMarkdownRemark;\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Wrapper>\r\n        <header css={[SiteHeader, outer]}>\r\n          <div css={[outer, SiteNavMain]}>\r\n            <div css={inner}>\r\n              <SiteNav isHome={false} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" css={[outer, ErrorContent]} className=\"error-content\">\r\n          <div css={[inner]}>\r\n            <section style={{ textAlign: 'center' }}>\r\n              <ErrorCode>404</ErrorCode>\r\n              <ErrorDescription>Page not found</ErrorDescription>\r\n              <Link css={ErrorLink} to=\"\">\r\n                Go to the front page â†’\r\n              </Link>\r\n            </section>\r\n\r\n            <div css={PostFeed} className=\"post-feed\">\r\n              {edges.map(({ node }) => (\r\n                <PostCard key={node.fields.slug} post={node} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 3720) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            author {\r\n              id\r\n              bio\r\n              avatar {\r\n                children {\r\n                  ... on ImageSharp {\r\n                    fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\r\n                      ...GatsbyImageSharpFluid\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorContent = css`\r\n  padding: 14vw 4vw 6vw;\r\n\r\n  @media (max-width: 800px) {\r\n    padding-top: 24vw;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    padding-top: 28vw;\r\n  }\r\n\r\n  @media (min-width: 940px) {\r\n    .post-card {\r\n      margin-bottom: 0;\r\n      padding-bottom: 0;\r\n      border-bottom: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorCode = styled.h1`\r\n  margin: 0;\r\n  /* color: var(--lightgrey); */\r\n  color: ${colors.lightgrey};\r\n  font-size: 12vw;\r\n  line-height: 1em;\r\n  letter-spacing: -5px;\r\n  opacity: 0.75;\r\n\r\n  @media (max-width: 800px) {\r\n    font-size: 11.2rem;\r\n  }\r\n`;\r\n\r\nconst ErrorDescription = styled.p`\r\n  margin: 0;\r\n  /* color: var(--midgrey); */\r\n  color: ${colors.midgrey};\r\n  font-size: 3rem;\r\n  line-height: 1.3em;\r\n  font-weight: 400;\r\n\r\n  @media (max-width: 800px) {\r\n    margin: 5px 0 0 0;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nconst ErrorLink = css`\r\n  display: inline-block;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport default NotFoundPage;\r\n"],"names":["Link","SiteNav","PostCard","Wrapper","IndexLayout","colors","inner","outer","PostFeed","SiteHeader","SiteNavMain","jsx","___EmotionJSX","NotFoundPage","props","edges","data","allMarkdownRemark","css","process","env","NODE_ENV","isHome","id","ErrorContent","className","style","textAlign","ErrorCode","ErrorDescription","ErrorLink","to","map","node","key","fields","slug","post","pageQuery","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","_styled","target","label","lightgrey","midgrey"],"sourceRoot":""}