{"version":3,"file":"component---src-templates-index-tsx.js","mappings":"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","sources":["webpack://gatsby-casper/./src/components/Pagination.tsx","webpack://gatsby-casper/./src/templates/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { darken } from 'polished';\r\nimport { css } from '@emotion/react';\r\n\r\nimport { colors } from '../styles/colors';\r\n\r\nexport type PaginationProps = {\r\n  currentPage: number;\r\n  numPages: number;\r\n};\r\n\r\nfunction Pagination({ currentPage, numPages }: PaginationProps) {\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? '/' : `../${(currentPage - 1).toString()}`;\r\n  const nextPage = `../${(currentPage + 1).toString()}`;\r\n\r\n  return (\r\n    <nav css={navCss}>\r\n      <div>\r\n        {!isFirst && (\r\n          <Link to={prevPage} rel=\"prev\">\r\n            {/* << symbol */}\r\n            {String.fromCharCode(171)}\r\n          </Link>\r\n        )}\r\n\r\n        {Array.from({ length: numPages }, (_, i) => (\r\n          <Link\r\n            key={`pagination-number${i + 1}`}\r\n            className={i + 1 === currentPage ? 'active' : ''}\r\n            to={`/${i === 0 ? '' : i + 1}`}\r\n          >\r\n            {i + 1}\r\n          </Link>\r\n        ))}\r\n\r\n        {!isLast && (\r\n          <Link to={nextPage} rel=\"next\">\r\n            {/* >> symbol */}\r\n            {String.fromCharCode(187)}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst navCss = css`\r\n  text-align: center;\r\n  div {\r\n    display: inline-block;\r\n  }\r\n\r\n  a {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\r\n    background: #fff;\r\n    color: black;\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n    transition: background-color 0.3s;\r\n    border: 1px solid #ddd;\r\n    margin: 0 4px;\r\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\r\n    border-radius: 6px;\r\n    margin-bottom: 5px;\r\n    min-width: 50px;\r\n\r\n    &.active {\r\n      -webkit-box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      -moz-box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n    }\r\n\r\n    &:hover:not(.active) {\r\n      background-color: #ddd;\r\n    }\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import { graphql } from 'gatsby';\r\nimport { getSrc, getImage } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { css } from '@emotion/react';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport Pagination from '../components/Pagination';\r\nimport { PostCard } from '../components/PostCard';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport {\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  Posts,\r\n  SiteDescription,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteMain,\r\n  SiteTitle,\r\n  SiteHeaderStyles,\r\n} from '../styles/shared';\r\nimport config from '../website-config';\r\nimport type { PageContext } from './post';\r\n\r\nexport type IndexProps = {\r\n  children: React.ReactNode;\r\n  pageContext: {\r\n    currentPage: number;\r\n    numPages: number;\r\n  };\r\n  data: {\r\n    logo: any;\r\n    header: any;\r\n    allMarkdownRemark: {\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n};\r\n\r\nfunction IndexPage(props: IndexProps) {\r\n  const width = getImage(props.data.header)?.width;\r\n  const height = getImage(props.data.header)?.height;\r\n\r\n  return (\r\n    <IndexLayout css={HomePosts}>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>{config.title}</title>\r\n        <meta name=\"description\" content={config.description} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={config.title} />\r\n        <meta property=\"og:description\" content={config.description} />\r\n        <meta property=\"og:url\" content={config.siteUrl} />\r\n        <meta property=\"og:image\" content={`${config.siteUrl}${getSrc(props.data.header)}`} />\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        {config.googleSiteVerification && (\r\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\r\n        )}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={config.title} />\r\n        <meta name=\"twitter:description\" content={config.description} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl} />\r\n        <meta name=\"twitter:image\" content={`${config.siteUrl}${getSrc(props.data.header)}`} />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        <meta property=\"og:image:width\" content={width?.toString()} />\r\n        <meta property=\"og:image:height\" content={height?.toString()} />\r\n      </Helmet>\r\n      <Wrapper>\r\n        <div\r\n          css={[outer, SiteHeader, SiteHeaderStyles]}\r\n          className=\"site-header-background\"\r\n          style={{\r\n            backgroundImage: `url('${getSrc(props.data.header)}')`,\r\n          }}\r\n        >\r\n          <div css={inner}>\r\n            <SiteNav isHome />\r\n            <SiteHeaderContent className=\"site-header-content\">\r\n              <SiteTitle className=\"site-title\">\r\n                {props.data.logo ? (\r\n                  <img\r\n                    style={{ maxHeight: '55px', height: '55px' }}\r\n                    src={getSrc(props.data.logo)}\r\n                    alt={config.title}\r\n                  />\r\n                ) : (\r\n                  config.title\r\n                )}\r\n              </SiteTitle>\r\n              <SiteDescription>{config.description}</SiteDescription>\r\n            </SiteHeaderContent>\r\n          </div>\r\n        </div>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={[inner, Posts]}>\r\n            <div css={[PostFeed]}>\r\n              {props.data.allMarkdownRemark.edges.map(\r\n                (post, index) =>\r\n                  // filter out drafts in production\r\n                  (post.node.frontmatter.draft !== true ||\r\n                    process.env.NODE_ENV !== 'production') && (\r\n                    <PostCard key={post.node.fields.slug} post={post.node} isLarge={index === 0} />\r\n                  ),\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {props.children}\r\n        {props.pageContext.numPages > 1 && (\r\n          <Pagination\r\n            currentPage={props.pageContext.currentPage}\r\n            numPages={props.pageContext.numPages}\r\n          />\r\n        )}\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    logo: file(relativePath: { eq: \"img/logo-unimag.png\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(layout: FIXED)\r\n      }\r\n    }\r\n    header: file(relativePath: { eq: \"img/main-dg.png\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 2000, quality: 100, layout: FIXED, formats: [AUTO, WEBP, AVIF])\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { frontmatter: { date: ASC } }\r\n      filter: { frontmatter: { draft: { ne: true } } }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date\r\n            tags\r\n            draft\r\n            excerpt\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: FULL_WIDTH, formats: [AUTO, WEBP, AVIF])\r\n              }\r\n            }\r\n            author {\r\n              name\r\n              bio\r\n              avatar {\r\n                childImageSharp {\r\n                  gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HomePosts = css`\r\n  @media (min-width: 795px) {\r\n    .post-card-large {\r\n      flex: 1 1 100%;\r\n      flex-direction: row;\r\n      padding-bottom: 40px;\r\n      min-height: 280px;\r\n      border-top: 0;\r\n    }\r\n\r\n    .post-card-large .post-card-title {\r\n      margin-top: 0;\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    .post-card-large:not(.no-image) .post-card-header {\r\n      margin-top: 0;\r\n    }\r\n\r\n    .post-card-large .post-card-image-link {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      margin-bottom: 0;\r\n      min-height: 380px;\r\n    }\r\n\r\n    .post-card-large .post-card-image {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .post-card-large .post-card-content {\r\n      flex: 0 1 361px;\r\n      justify-content: center;\r\n    }\r\n\r\n    .post-card-large .post-card-title {\r\n      margin-top: 0;\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    .post-card-large .post-card-content-link {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-large .post-card-meta {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-large .post-card-excerpt p {\r\n      margin-bottom: 1.5em;\r\n      font-size: 1.8rem;\r\n      line-height: 1.5em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexPage;\r\n"],"names":["Link","darken","css","colors","jsx","___EmotionJSX","Pagination","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","navCss","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","darkgrey","process","env","NODE_ENV","getSrc","getImage","Helmet","Footer","SiteNav","PostCard","Wrapper","IndexLayout","inner","outer","PostFeed","Posts","SiteDescription","SiteHeader","SiteHeaderContent","SiteMain","SiteTitle","SiteHeaderStyles","config","IndexPage","props","_getImage","_getImage2","width","data","header","height","HomePosts","lang","title","name","content","description","property","siteUrl","facebook","googleSiteVerification","twitter","split","style","backgroundImage","isHome","logo","maxHeight","src","alt","id","allMarkdownRemark","edges","map","post","index","node","frontmatter","draft","fields","slug","isLarge","children","pageContext","pageQuery","styles","_EMOTION_STRINGIFIED_CSS_ERROR__"],"sourceRoot":""}