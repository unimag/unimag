{"version":3,"file":"component---src-templates-tags-tsx.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/tags.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport { getSrc } from 'gatsby-plugin-image';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport { PostCard } from '../components/PostCard';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport {\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  SiteDescription,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteMain,\r\n  SiteTitle,\r\n  SiteNavMain,\r\n  SiteArchiveHeader,\r\n  ResponsiveHeaderBackground,\r\n  SiteHeaderBackground,\r\n} from '../styles/shared';\r\nimport type { PageContext } from './post';\r\nimport { Helmet } from 'react-helmet';\r\nimport config from '../website-config';\r\n\r\ntype TagTemplateProps = {\r\n  location: Location;\r\n  pageContext: {\r\n    tag: string;\r\n  };\r\n  data: {\r\n    allTagYaml: {\r\n      edges: Array<{\r\n        node: {\r\n          yamlId: string;\r\n          description: string;\r\n          image?: any;\r\n        };\r\n      }>;\r\n    };\r\n    allMarkdownRemark: {\r\n      totalCount: number;\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n};\r\n\r\nfunction Tags({ pageContext, data, location }: TagTemplateProps) {\r\n  const tag = pageContext.tag ? pageContext.tag : '';\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagData = data.allTagYaml.edges.find(\r\n    n => n.node.yamlId.toLowerCase() === tag.toLowerCase(),\r\n  );\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>\r\n          {tag} - {config.title}\r\n        </title>\r\n        <meta name=\"description\" content={tagData?.node ? tagData.node.description : ''} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\r\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n      </Helmet>\r\n      <Wrapper>\r\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\r\n          <div css={[outer, SiteNavMain]}>\r\n            <div css={inner}>\r\n              <SiteNav isHome={false} />\r\n            </div>\r\n          </div>\r\n          <ResponsiveHeaderBackground\r\n            css={[outer, SiteHeaderBackground]}\r\n            backgroundImage={getSrc(tagData?.node?.image)}\r\n            className=\"site-header-background\"\r\n          >\r\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\r\n              <SiteTitle className=\"site-title\">{tag}</SiteTitle>\r\n              <SiteDescription className=\"site-description\">\r\n                {tagData?.node.description ? (\r\n                  tagData.node.description\r\n                ) : (\r\n                  <>\r\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\r\n                    {totalCount === 1 && '1 post'}\r\n                    {totalCount === 0 && 'No posts'}\r\n                  </>\r\n                )}\r\n              </SiteDescription>\r\n            </SiteHeaderContent>\r\n          </ResponsiveHeaderBackground>\r\n        </header>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            <div css={[PostFeed]}>\r\n              {edges.map(({ node }) => (\r\n                <PostCard key={node.fields.slug} post={node} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    allTagYaml {\r\n      edges {\r\n        node {\r\n          yamlId\r\n          description\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: FULL_WIDTH)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { frontmatter: { date: ASC } }\r\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            excerpt\r\n            tags\r\n            date\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: FULL_WIDTH)\r\n              }\r\n            }\r\n            author {\r\n              name\r\n              bio\r\n              avatar {\r\n                childImageSharp {\r\n                  gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["React","getSrc","Footer","SiteNav","PostCard","Wrapper","IndexLayout","inner","outer","PostFeed","SiteDescription","SiteHeader","SiteHeaderContent","SiteMain","SiteTitle","SiteNavMain","SiteArchiveHeader","ResponsiveHeaderBackground","SiteHeaderBackground","Helmet","config","jsx","___EmotionJSX","Tags","pageContext","data","location","_tagData$node","tag","edges","totalCount","allMarkdownRemark","tagData","allTagYaml","find","n","node","yamlId","toLowerCase","lang","title","name","content","description","property","siteUrl","pathname","facebook","twitter","split","className","css","process","env","NODE_ENV","isHome","backgroundImage","image","Fragment","id","map","key","fields","slug","post","pageQuery"],"sourceRoot":""}