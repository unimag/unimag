{"version":3,"file":"component---src-templates-tags-tsx-d25d69bb5d1d40b887f3.js","mappings":"2OA4HA,UAzEA,SAAaA,GAAoD,IAAAC,EAAA,IAAnD,YAAEC,EAAW,KAAEC,EAAI,SAAEC,GAA4BJ,EAC7D,MAAMK,EAAMH,EAAYG,IAAMH,EAAYG,IAAM,IAC1C,MAAEC,EAAK,WAAEC,GAAeJ,EAAKK,kBAC7BC,EAAUN,EAAKO,WAAWJ,MAAMK,MACpCC,GAAKA,EAAEC,KAAKC,OAAOC,gBAAkBV,EAAIU,gBAG3C,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,MACVD,EAAAA,EAAAA,IAACE,EAAAA,EAAM,MACLF,EAAAA,EAAAA,IAAA,QAAMG,KAAMC,EAAAA,EAAOD,QACnBH,EAAAA,EAAAA,IAAA,aACGX,EAAI,MAAIe,EAAAA,EAAOC,QAElBL,EAAAA,EAAAA,IAAA,QAAMM,KAAK,cAAcC,QAASd,SAAAA,EAASI,KAAOJ,EAAQI,KAAKW,YAAc,MAC7ER,EAAAA,EAAAA,IAAA,QAAMS,SAAS,eAAeF,QAASH,EAAAA,EAAOC,SAC9CL,EAAAA,EAAAA,IAAA,QAAMS,SAAS,UAAUF,QAAQ,aACjCP,EAAAA,EAAAA,IAAA,QAAMS,SAAS,WAAWF,QAAU,GAAElB,OAASe,EAAAA,EAAOC,WACtDL,EAAAA,EAAAA,IAAA,QAAMS,SAAS,SAASF,QAASH,EAAAA,EAAOM,QAAUtB,EAASuB,WAC1DP,EAAAA,EAAOQ,WAAYZ,EAAAA,EAAAA,IAAA,QAAMS,SAAS,oBAAoBF,QAASH,EAAAA,EAAOQ,YACvEZ,EAAAA,EAAAA,IAAA,QAAMM,KAAK,eAAeC,QAAQ,yBAClCP,EAAAA,EAAAA,IAAA,QAAMM,KAAK,gBAAgBC,QAAU,GAAElB,OAASe,EAAAA,EAAOC,WACvDL,EAAAA,EAAAA,IAAA,QAAMM,KAAK,cAAcC,QAASH,EAAAA,EAAOM,QAAUtB,EAASuB,WAC3DP,EAAAA,EAAOS,UACNb,EAAAA,EAAAA,IAAA,QACEM,KAAK,eACLC,QAAU,IAAGH,EAAAA,EAAOS,QAAQC,MAAM,wBAAwB,SAIhEd,EAAAA,EAAAA,IAACe,EAAAA,EAAO,MACNf,EAAAA,EAAAA,IAAA,UAAQgB,UAAU,sBAAsBC,IAAG,CAAGC,EAAAA,GAAYC,EAAAA,GAAiB,SACzEnB,EAAAA,EAAAA,IAAA,OAAKiB,IAAG,CAAGG,EAAAA,GAAOC,EAAAA,GAAW,SAC3BrB,EAAAA,EAAAA,IAAA,OAAKiB,IAAKK,EAAAA,KACRtB,EAAAA,EAAAA,IAACuB,EAAAA,EAAO,CAACC,QAAQ,OAGrBxB,EAAAA,EAAAA,IAACyB,EAAAA,GAA0B,CACzBR,IAAG,CAAGG,EAAAA,GAAOM,EAAAA,GAAoB,OACjCC,iBAAiBC,EAAAA,EAAAA,GAAOnC,SAAa,QAANR,EAAPQ,EAASI,YAAI,IAAAZ,OAAN,EAAPA,EAAe4C,OACvCb,UAAU,2BAEVhB,EAAAA,EAAAA,IAAC8B,EAAAA,GAAiB,CAACb,IAAKK,EAAAA,GAAON,UAAU,wBACvChB,EAAAA,EAAAA,IAAC+B,EAAAA,GAAS,CAACf,UAAU,cAAc3B,IACnCW,EAAAA,EAAAA,IAACgC,EAAAA,GAAe,CAAChB,UAAU,oBACxBvB,SAAAA,EAASI,KAAKW,YACbf,EAAQI,KAAKW,aAEbR,EAAAA,EAAAA,IAAAiC,EAAAA,SAAA,KAAE,mBACiB1C,EAAa,GAAM,GAAEA,UACtB,IAAfA,GAAoB,SACL,IAAfA,GAAoB,iBAOjCS,EAAAA,EAAAA,IAAA,QAAMkC,GAAG,YAAYjB,IAAG,CAAGkB,EAAAA,GAAUf,EAAAA,GAAK,SACxCpB,EAAAA,EAAAA,IAAA,OAAKiB,IAAKK,EAAAA,KACRtB,EAAAA,EAAAA,IAAA,OAAKiB,IAAG,CAAGmB,EAAAA,GAAQ,QAChB9C,EAAM+C,KAAIC,IAAA,IAAC,KAAEzC,GAAMyC,EAAA,OAClBtC,EAAAA,EAAAA,IAACuC,EAAAA,GAAQ,CAACC,IAAK3C,EAAK4C,OAAOC,KAAMC,KAAM9C,GAAQ,QAKvDG,EAAAA,EAAAA,IAAC4C,EAAAA,EAAM,OAIf,C","sources":["webpack://gatsby-casper/./src/templates/tags.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport { getSrc } from 'gatsby-plugin-image';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport { PostCard } from '../components/PostCard';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport {\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  SiteDescription,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteMain,\r\n  SiteTitle,\r\n  SiteNavMain,\r\n  SiteArchiveHeader,\r\n  ResponsiveHeaderBackground,\r\n  SiteHeaderBackground,\r\n} from '../styles/shared';\r\nimport type { PageContext } from './post';\r\nimport { Helmet } from 'react-helmet';\r\nimport config from '../website-config';\r\n\r\ntype TagTemplateProps = {\r\n  location: Location;\r\n  pageContext: {\r\n    tag: string;\r\n  };\r\n  data: {\r\n    allTagYaml: {\r\n      edges: Array<{\r\n        node: {\r\n          yamlId: string;\r\n          description: string;\r\n          image?: any;\r\n        };\r\n      }>;\r\n    };\r\n    allMarkdownRemark: {\r\n      totalCount: number;\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n};\r\n\r\nfunction Tags({ pageContext, data, location }: TagTemplateProps) {\r\n  const tag = pageContext.tag ? pageContext.tag : '';\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagData = data.allTagYaml.edges.find(\r\n    n => n.node.yamlId.toLowerCase() === tag.toLowerCase(),\r\n  );\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>\r\n          {tag} - {config.title}\r\n        </title>\r\n        <meta name=\"description\" content={tagData?.node ? tagData.node.description : ''} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\r\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n      </Helmet>\r\n      <Wrapper>\r\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\r\n          <div css={[outer, SiteNavMain]}>\r\n            <div css={inner}>\r\n              <SiteNav isHome={false} />\r\n            </div>\r\n          </div>\r\n          <ResponsiveHeaderBackground\r\n            css={[outer, SiteHeaderBackground]}\r\n            backgroundImage={getSrc(tagData?.node?.image)}\r\n            className=\"site-header-background\"\r\n          >\r\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\r\n              <SiteTitle className=\"site-title\">{tag}</SiteTitle>\r\n              <SiteDescription className=\"site-description\">\r\n                {tagData?.node.description ? (\r\n                  tagData.node.description\r\n                ) : (\r\n                  <>\r\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\r\n                    {totalCount === 1 && '1 post'}\r\n                    {totalCount === 0 && 'No posts'}\r\n                  </>\r\n                )}\r\n              </SiteDescription>\r\n            </SiteHeaderContent>\r\n          </ResponsiveHeaderBackground>\r\n        </header>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            <div css={[PostFeed]}>\r\n              {edges.map(({ node }) => (\r\n                <PostCard key={node.fields.slug} post={node} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    allTagYaml {\r\n      edges {\r\n        node {\r\n          yamlId\r\n          description\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: FULL_WIDTH)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { frontmatter: { date: ASC } }\r\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            excerpt\r\n            tags\r\n            date\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: FULL_WIDTH)\r\n              }\r\n            }\r\n            author {\r\n              name\r\n              bio\r\n              avatar {\r\n                childImageSharp {\r\n                  gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","_tagData$node","pageContext","data","location","tag","edges","totalCount","allMarkdownRemark","tagData","allTagYaml","find","n","node","yamlId","toLowerCase","___EmotionJSX","IndexLayout","Helmet","lang","config","title","name","content","description","property","siteUrl","pathname","facebook","twitter","split","Wrapper","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","ResponsiveHeaderBackground","SiteHeaderBackground","backgroundImage","getSrc","image","SiteHeaderContent","SiteTitle","SiteDescription","React","id","SiteMain","PostFeed","map","_ref2","PostCard","key","fields","slug","post","Footer"],"sourceRoot":""}