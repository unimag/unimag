{"version":3,"file":"14cad5d5-cd19c2284f9b877c869a.js","mappings":"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","sources":["webpack://gatsby-casper/./src/components/PostCard.tsx"],"sourcesContent":["import { Link } from 'gatsby';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport { kebabCase } from 'lodash';\r\nimport { lighten } from 'polished';\r\nimport React from 'react';\r\n\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { colors } from '../styles/colors';\r\nimport type { PageContext } from '../templates/post';\r\nimport { AuthorList } from './AuthorList';\r\nimport config from '../website-config';\r\n\r\nexport type PostCardProps = {\r\n  post: PageContext;\r\n  isLarge?: boolean;\r\n};\r\n\r\nexport function PostCard({ post, isLarge = false }: PostCardProps) {\r\n  return (\r\n    <article\r\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${\r\n        isLarge ? 'post-card-large' : ''\r\n      }`}\r\n      css={[PostCardStyles, isLarge && PostCardLarge]}\r\n    >\r\n      {post.frontmatter.image && (\r\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\r\n          <PostCardImage className=\"post-card-image\">\r\n            {post.frontmatter?.image && (\r\n              <GatsbyImage\r\n                image={getImage(post.frontmatter.image)!}\r\n                alt={`${post.frontmatter.title} cover image`}\r\n                style={{ height: '100%' }}\r\n                loading={isLarge ? 'eager' : 'lazy'}\r\n              />\r\n            )}\r\n          </PostCardImage>\r\n        </Link>\r\n      )}\r\n      <PostCardContent className=\"post-card-content\">\r\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\r\n          <PostCardHeader className=\"post-card-header\">\r\n            <PostCardTitle className=\"post-card-title\">{post.frontmatter.title}</PostCardTitle>\r\n          </PostCardHeader>\r\n          <PostCardExcerpt className=\"post-card-excerpt\">\r\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\r\n          </PostCardExcerpt>\r\n        </Link>\r\n        <PostCardMeta className=\"post-card-meta\">\r\n          <AuthorList authors={post.frontmatter.author} tooltip=\"small\" />\r\n          <PostCardBylineContent className=\"post-card-byline-content\">\r\n            <span>\r\n              {post.frontmatter?.author?.map((author, index) => (\r\n                <React.Fragment key={author.name}>\r\n                  <Link to={`/author/${kebabCase(author.name)}/`}>{author.name}</Link>\r\n                  {post.frontmatter.author.length - 1 > index && ', '}\r\n                </React.Fragment>\r\n              ))}\r\n            </span>\r\n            <span className=\"post-card-byline-date\">\r\n              {post.fields.readingTime.text}\r\n            </span>\r\n            <PostCardTag>\r\n              {post.frontmatter.tags && config.showAllTags && (\r\n                <PostCardPrimaryTag className=\"post-card-primary-tag\">\r\n                  {post.frontmatter.tags.map((tag, idx) => (\r\n                    <React.Fragment key={tag}>\r\n                      {idx > 0 && <>, &nbsp;</>}\r\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </PostCardPrimaryTag>\r\n              )}\r\n              {post.frontmatter.tags && !config.showAllTags && (\r\n                <PostCardPrimaryTag className=\"post-card-primary-tag\">\r\n                  <Link to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}>\r\n                    {post.frontmatter.tags[0]}\r\n                  </Link>\r\n                </PostCardPrimaryTag>\r\n              )}\r\n            </PostCardTag>\r\n          </PostCardBylineContent>\r\n        </PostCardMeta>\r\n      </PostCardContent>\r\n    </article>\r\n  );\r\n}\r\n\r\nconst PostCardStyles = css`\r\n  position: relative;\r\n  flex: 1 1 301px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  margin: 0 0 40px;\r\n  padding: 0 20px 40px;\r\n  min-height: 220px;\r\n  background-size: cover;\r\n`;\r\n\r\nconst PostCardLarge = css`\r\n  @media (min-width: 795px) {\r\n    flex: 1 1 100%;\r\n    flex-direction: row;\r\n    padding-bottom: 40px;\r\n    min-height: 280px;\r\n    border-top: 0;\r\n\r\n    :not(.no-image) .post-card-header {\r\n      margin-top: 0;\r\n    }\r\n\r\n    .post-card-image-link {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      margin-bottom: 0;\r\n      min-height: 380px;\r\n    }\r\n\r\n    .post-card-image {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .post-card-content {\r\n      flex: 0 1 361px;\r\n      justify-content: center;\r\n    }\r\n\r\n    .post-card-title {\r\n      margin-top: 0;\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    .post-card-content-link {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-meta {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-excerpt p {\r\n      margin-bottom: 1.5em;\r\n      font-size: 1.8rem;\r\n      line-height: 1.5em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostCardImageLink = css`\r\n  position: relative;\r\n  display: block;\r\n  overflow: hidden;\r\n  border-radius: 5px 5px 0 0;\r\n`;\r\n\r\nconst PostCardImage = styled.div`\r\n  width: auto;\r\n  height: 200px;\r\n  background: ${colors.lightgrey} no-repeat center center;\r\n  background-size: cover;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    background: ${colors.darkmode};\r\n  }\r\n`;\r\n\r\nconst PostCardContent = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PostCardContentLink = css`\r\n  position: relative;\r\n  display: block;\r\n  /* color: var(--darkgrey); */\r\n  color: ${colors.darkgrey};\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst PostCardPrimaryTag = styled.div`\r\n  margin: 0 0 0.2em;\r\n  /* color: var(--blue); */\r\n  color: ${colors.blue};\r\n  font-size: 1.2rem;\r\n  font-weight: 500;\r\n  letter-spacing: 0.2px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst PostCardTag = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 10px 0 0 0;\r\n`;\r\n\r\nconst PostCardTitle = styled.h2`\r\n  margin: 0 0 0.4em;\r\n  line-height: 1.15em;\r\n  transition: color 0.2s ease-in-out;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    color: rgba(255, 255, 255, 0.85);\r\n  }\r\n`;\r\n\r\nconst PostCardExcerpt = styled.section`\r\n  font-family: Georgia, serif;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* color: color(var(--midgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.midgrey)} !important;\r\n  }\r\n`;\r\n\r\nconst PostCardMeta = styled.footer`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 0;\r\n`;\r\n\r\nconst PostCardBylineContent = styled.div`\r\n  flex: 1 1 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 4px 0 0 10px;\r\n  /* color: color(var(--midgrey) l(+10%)); */\r\n  color: ${lighten('0.1', colors.midgrey)};\r\n  font-size: 1.2rem;\r\n  line-height: 1.4em;\r\n  font-weight: 400;\r\n  letter-spacing: 0.2px;\r\n  text-transform: uppercase;\r\n\r\n  span {\r\n    margin: 0;\r\n  }\r\n\r\n  a {\r\n    /* color: color(var(--darkgrey) l(+20%)); */\r\n    color: ${lighten('0.2', colors.darkgrey)};\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    a {\r\n      color: rgba(255, 255, 255, 0.75);\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostCardHeader = styled.header`\r\n  margin: 15px 0 0;\r\n`;\r\n\r\nexport const StaticAvatar = css`\r\n  display: block;\r\n  overflow: hidden;\r\n  margin: 0 0 0 -6px;\r\n  width: 34px;\r\n  height: 34px;\r\n  border: #fff 2px solid;\r\n  border-radius: 100%;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* border-color: color(var(--darkgrey) l(+2%)); */\r\n    border-color: ${lighten('0.02', colors.darkgrey)};\r\n  }\r\n`;\r\n\r\nexport const AuthorProfileImage = css`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  /* background: color(var(--lightgrey) l(+10%)); */\r\n  background: ${lighten('0.1', colors.lightgrey)};\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    background: ${colors.darkmode};\r\n  }\r\n`;\r\n"],"names":["PostCard","_ref","_post$frontmatter","_post$frontmatter2","_post$frontmatter2$au","post","isLarge","___EmotionJSX","className","frontmatter","image","css","PostCardStyles","PostCardLarge","Link","PostCardImageLink","to","fields","slug","PostCardImage","GatsbyImage","getImage","alt","title","style","height","loading","PostCardContent","PostCardContentLink","PostCardHeader","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","AuthorList","authors","author","tooltip","PostCardBylineContent","map","index","React","key","name","_kebabCase","length","readingTime","text","PostCardTag","tags","config","showAllTags","PostCardPrimaryTag","tag","idx","styles","_styled","target","colors","lightgrey","darkmode","darkgrey","blue","lighten","midgrey","AuthorProfileImage"],"sourceRoot":""}